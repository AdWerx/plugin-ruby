// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`for the off.json config if.rb matches expected output 1`] = `
"# frozen_string_literal: true

if a
  super_super_super_super_super_super_super_super_super_super_super_super_long
end

# rubocop:disable Style/Not, Style/NegatedIf, Lint/EmptyExpression
if not a
  b
end

# from ruby test/ruby/test_not.rb
assert_equal(true, (not ()))
# rubocop:enable Style/Not, Style/NegatedIf, Lint/EmptyExpression

if a
  break # comment
end

if a

else
  b
end

if a
  1
elsif b
  2
end

if a
  super_super_super_super_super_super_super_super_super_super_super_long
else
  super_super_super_super_super_super_super_super_super_super_super_super_long
end

if a
  1
elsif b
  2
elsif c
  3
else
  4
end

unless a
  super_super_super_super_super_super_super_super_super_super_super_super_long
end

# rubocop:disable Style/UnlessElse
unless a
  super_super_super_super_super_super_super_super_super_super_super_long
else
  super_super_super_super_super_super_super_super_super_super_super_super_long
end
# rubocop:enable Style/UnlessElse

if a
  1
end

if super_super_super_super_super_super_super_super_super_super_super_super_long
  1
end

unless a
  1
end

unless super_super_super_super_super_super_super_super_super_super_super_suplong
  1
end

a ? 1 : 2

a ? 2 : 1

a ? 1 : 2
if a
  super_super_super_super_super_super_super_super_super_super_super_long
else
  super_super_super_super_super_super_super_super_super_super_super_super_long
end

if a
  b 1
else
  b(2)
end

if a
  b(1)
else
  b 2
end

a b do
  if a
    a \\"foo\\"
  else
    b
  end
end

if Some::Constant
   .super_super_super_super_super_super_super_super_super_super_long
  1
elsif Some::Constant
      .super_super_super_super_super_super_super_super_super_super_long
  2
end

unless Some::Constant
       .super_super_super_super_super_super_super_super_super_super_long
  1
end
"
`;

exports[`for the on.json config if.rb matches expected output 1`] = `
"# frozen_string_literal: true

if a
  super_super_super_super_super_super_super_super_super_super_super_super_long
end

# rubocop:disable Style/Not, Style/NegatedIf, Lint/EmptyExpression
b if not a

# from ruby test/ruby/test_not.rb
assert_equal(true, (not ()))
# rubocop:enable Style/Not, Style/NegatedIf, Lint/EmptyExpression

if a
  break # comment
end

if a

else
  b
end

if a
  1
elsif b
  2
end

if a
  super_super_super_super_super_super_super_super_super_super_super_long
else
  super_super_super_super_super_super_super_super_super_super_super_super_long
end

if a
  1
elsif b
  2
elsif c
  3
else
  4
end

unless a
  super_super_super_super_super_super_super_super_super_super_super_super_long
end

# rubocop:disable Style/UnlessElse
unless a
  super_super_super_super_super_super_super_super_super_super_super_long
else
  super_super_super_super_super_super_super_super_super_super_super_super_long
end
# rubocop:enable Style/UnlessElse

1 if a

if super_super_super_super_super_super_super_super_super_super_super_super_long
  1
end

1 unless a

unless super_super_super_super_super_super_super_super_super_super_super_suplong
  1
end

a ? 1 : 2

a ? 2 : 1

a ? 1 : 2
if a
  super_super_super_super_super_super_super_super_super_super_super_long
else
  super_super_super_super_super_super_super_super_super_super_super_super_long
end

if a
  b 1
else
  b(2)
end

if a
  b(1)
else
  b 2
end

a b do
  if a
    a 'foo'
  else
    b
  end
end

if Some::Constant
   .super_super_super_super_super_super_super_super_super_super_long
  1
elsif Some::Constant
      .super_super_super_super_super_super_super_super_super_super_long
  2
end

unless Some::Constant
       .super_super_super_super_super_super_super_super_super_super_long
  1
end
"
`;
